"""
Django settings for crowdfunding project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.utils.translation import gettext_lazy as _
import dj_database_url
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY", default="changeme-in-prod")

DEBUG = config('DEBUG', default=False, cast=bool)

# âœ… 1. DÃ©finis dâ€™abord ALLOWED_HOSTS comme une liste vide
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='').split(',')


# âœ… 2. Ajoute la configuration Render
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ngo',
    'corsheaders',
    'crispy_forms',
    'crispy_bootstrap5',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'crowdfunding.urls'

# Templates
TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ngo.context_processors.languages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crowdfunding.wsgi.application'


# -----------------------------
# DATABASES
# -----------------------------
DATABASE_URL = config("DATABASE_URL", default=None)

if DATABASE_URL:
    # Render ou prod : utilise DATABASE_URL
    DATABASES = {
        "default": dj_database_url.config(conn_max_age=600, ssl_require=True)
    }
else:
    # Local (fallback)
    DATABASES = {
        "default": dj_database_url.config(
            default=f"postgresql://{config('DATABASE_USER','')}:{config('DATABASE_PASSWORD','')}@{config('DATABASE_HOST','localhost')}:{config('DATABASE_PORT','5432')}/{config('DATABASE_NAME','')}",
            conn_max_age=600,
            ssl_require=False,
        )
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('fr', _('FranÃ§ais')),
    ('en', _('English')),
    ('nl', _('Nederlands')),
    ('es', _('EspaÃ±ol')),
]

# RÃ©pertoire pour les fichiers de traduction
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "ngo/static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

#user App
AUTH_USER_MODEL = "ngo.User"

# settings.py

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "ton_adresse_email@gmail.com"
EMAIL_HOST_PASSWORD = "ton_mot_de_passe_app"  # (ou app password Gmail)
DEFAULT_FROM_EMAIL = "IGIA <ton_adresse_email@gmail.com>"


# -----------------------------
# Celery Configuration
# -----------------------------
CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "Africa/Douala"  # adapte Ã  ton fuseau horaire

CELERY_BEAT_SCHEDULE = {
    "delete-inactive-users-every-night": {
        "task": "ngo.tasks.delete_inactive_users",
        "schedule": crontab(hour=3, minute=0),  # tous les jours Ã  03:00
    },
}


#redirection des utilisateurs
# ðŸŸ¢ URL par dÃ©faut si @login_required bloque un accÃ¨s
LOGIN_URL = '/login/redirect/'

# ðŸŸ¢ OÃ¹ rediriger aprÃ¨s connexion
LOGIN_REDIRECT_URL = '/dashboard/'

# ðŸŸ¢ OÃ¹ rediriger aprÃ¨s dÃ©connexion
LOGOUT_REDIRECT_URL = '/'


